name: CI Pipeline

on:
  push:
    branches:
      - CICD_test
  workflow_dispatch:

jobs:
  check_changes:
    name: Check Changes in DATASET_VERSION
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.changed }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for Changes in DATASET_VERSION
        id: check
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "DATASET_VERSION"; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected in DATASET_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes in DATASET_VERSION"
          fi
  train:
    needs: check_changes
    if: needs.check_changes.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements/requirements.txt
      - name: Re-Train and Save Pipeline
        env:
          CLEARML_API_HOST: 'https://api.clear.ml/'
          CLEARML_WEB_HOST: 'https://app.clear.ml'
          CLEARML_FILES_HOST: 'https://files.clear.ml'
          CLEARML_API_ACCESS_KEY: '58514LGVU4ZKJ9X4CTYIYQS0MWNQ8S'
          CLEARML_API_SECRET_KEY: 'hVfY6m4eIawlNajimANnLZ1cPPmQ_XKkFCwc_BIYxgiDxSZBUmZwo8BYNFEBbRPMvv8'
        run: python harit_model/retrain_pipeline.py
      - uses: actions/upload-artifact@v3
        with:
          name: my-trained-pipeline
          path: harit_model/trained_models

  test:
    needs: train
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - uses: actions/download-artifact@v3
        with:
          name: my-trained-pipeline
          path: harit_model/trained_models
      - name: Install dependencies
        run: pip install -r requirements/test_requirements.txt
      - name: Run Tests with pytest
        run: pytest

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      - uses: actions/download-artifact@v3
        with:
          name: my-trained-pipeline
          path: harit_model/trained_models
      - name: Install Build Tool
        run: pip install --upgrade build
      - name: Build Package
        run: python -m build
      - uses: actions/upload-artifact@v3
        with:
          name: my-build-package
          path: dist/*.whl

  push-image:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: my-build-package
          path: harit_model_api
      - name: Login to Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS_TOKEN }}
        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Build Docker Image for Chainlit App
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
        run: docker build . -f Dockerfile -t $DOCKER_USER/harit-chainlit:latest
      - name: Push Docker Image
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
        run: docker push $DOCKER_USER/harit-chainlit
      - name: Logout from Docker Hub
        run: docker logout
