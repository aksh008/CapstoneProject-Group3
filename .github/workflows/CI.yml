name: CI Pipeline
on:
  push:
    branches:
      - akshay_test
  workflow_dispatch:


jobs:
  train:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: pip install -r requirements/requirements.txt
    - name: install clearml agent
      run: pip -q install clearml-agent
    - name: setupmatplotlib
      run: export MPLBACKEND=TkAg
    - name: start the new agent
      env:
        CLEARML_WEB_HOST: ${{ secrets.CLEARML_WEB_HOST }}
        CLEARML_API_HOST: ${{ secrets.CLEARML_API_HOST}}
        CLEARML_FILES_HOST: ${{ secrets.CLEARML_FILES_HOST}}
        CLEARML_API_ACCESS_KEY: ${{ secrets.CLEARML_API_ACCESS_KEY}}
        CLEARML_API_SECRET_KEY: ${{ secrets.CLEARML_API_SECRET_KEY}}
      run: clearml-agent daemon --queue default
    - name: run the train pipeline on clearml runner
      run: python harit_model/train_pipeline.py
    - uses: actions/upload-artifact@v3
      with:
        name: my-trained-pipeline
        path: harit_model/trained_models

  # test:
  #   needs: train
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: '3.10'
  #   - uses: actions/download-artifact@v3
  #     with:
  #       name: my-trained-pipeline
  #       path: harit_model/trained_models
  #   - name: Install dependencies
  #     run: pip install -r requirements/test_requirements.txt
  #   - name: Test with pytest
  #     run: pytest

  build:
    needs: [train]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - uses: actions/download-artifact@v3
      with:
        name: my-trained-pipeline
        path: harit_model/trained_models
    - name: Install dependencies
      run: pip install --upgrade build
    - name: Build package
      run: python -m build
    - uses: actions/upload-artifact@v3
      with:
        name: my-build-package
        path: dist/*.whl

  push-image:
    needs: [train,build]
    runs-on: ubuntu-latest
    steps:
    - name: Repo Checkout
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: my-build-package
        path: harit_model_api

    - name: Login to Docker hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS_TOKEN }}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Build the Docker image for Fastapi app
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
      run: docker build . -f Dockerfile -t $DOCKER_USER/harit-fastapi:latest

    - name: Push the Docker Image
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
      run: docker push $DOCKER_USER/harit-fastapi

    - name: Logout to Docker hub
      run: docker logout
