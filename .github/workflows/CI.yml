name: CI Pipeline
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check_changes:
    name: Check Changes in DATASET_VERSION
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Check for Changes in DATASET_VERSION
      run: |
        if git diff --exit-code --quiet HEAD~1 HEAD -- DATASET_VERSION; then
          echo "No change in DATASET_VERSION file. Skipping training."
          exit 0  # Skip the training step
        else
          echo "Change detected in DATASET_VERSION file. Proceeding with training."
        fi

  train:
    needs: check-changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: pip install -r requirements/requirements.txt
    - name: Re-Train and save pipeline
      run: python harit_model/retrain_pipeline.py
    - uses: actions/upload-artifact@v3
      with:
        name: my-trained-pipeline
        path: harit_model/trained_models

  test:
    needs: train
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    - uses: actions/download-artifact@v3
      with:
        name: my-trained-pipeline
        path: harit_model/trained_models
    - name: Install dependencies
      run: pip install -r requirements/test_requirements.txt
    - name: Test with pytest
      run: pytest

  build:
    needs: [train]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    - uses: actions/download-artifact@v3
      with:
        name: my-trained-pipeline
        path: harit_model/trained_models
    - name: Install dependencies
      run: pip install --upgrade build
    - name: Build package
      run: python -m build
    - uses: actions/upload-artifact@v3
      with:
        name: my-build-package
        path: dist/*.whl

  push-image:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
    - name: Repo Checkout
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: my-build-package
        path: harit_model_api

    - name: Login to Docker hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS_TOKEN }}
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    - name: Build the Docker image for chainlit app
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
      run: docker build . -f Dockerfile -t $DOCKER_USER/harit-chainlit:latest

    - name: Push the Docker Image
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
      run: docker push $DOCKER_USER/harit-chainlit

    - name: Logout to Docker hub
      run: docker logout
